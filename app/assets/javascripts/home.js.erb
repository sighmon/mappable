// Home page js


var map = L.map('map');

map.ids = [];

map.locate();

L.tileLayer("http://{s}.tile.cloudmade.com/<%= ENV['MAP_TILES_API_KEY'] %>/97734/256/{z}/{x}/{y}.png", {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
    maxZoom: 30,
    detectRetina: true
}).addTo(map);

// Make a custom marker

var cameraIcon = L.icon({
    iconUrl: 'assets/camera.png',
    iconRetinaUrl: 'assets/camera@2x.png',
    shadowUrl: 'assets/camera-shadow.png',
    shadowRetinaUrl: 'assets/camera-shadow@2x.png',

    iconSize:     [20, 20], // size of the icon
    shadowSize:   [32, 20], // size of the shadow
    //iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    //shadowAnchor: [4, 62],  // the same for the shadow
    popupAnchor:  [0, -10] // point from which the popup should open relative to the iconAnchor
});

// Set a popup when you click on the map (for testing)

// var popup = L.popup();

// function onMapClick(e) {
//     popup
//         .setLatLng(e.latlng)
//         .setContent("You clicked the map at " + e.latlng.toString())
//         .openOn(map);
// }

// map.on('click', onMapClick);


////////////////////////////////////////////////
// Rendering to the map bounds on movement //
////////////////////////////////////////////////

var geoLayer;

var popupLayer = L.layerGroup().addTo(map);

function search() {
    jQuery.get("images/search", { "maximum_latitude": map.getBounds().getNorthWest().lat, "minimum_latitude": map.getBounds().getSouthEast().lat, "maximum_longitude": map.getBounds().getSouthEast().lng, "minimum_longitude": map.getBounds().getNorthWest().lng }, function(data){
        //myLayer.addData(data);
        //if (geoLayer) map.removeLayer(geoLayer);
        geoLayer = L.geoJson(data, {
          pointToLayer: function (feature, latlng) {
            latlng.lat+=(Math.random()-0.5)*0.001;
            latlng.lng+=(Math.random()-0.5)*0.001;
            return L.marker(latlng, {icon: cameraIcon, draggable: true});
          },
          filter: function (feature, layer) {
            return ($.inArray(feature.id,map.ids)<0);
          },
          onEachFeature: function (feature, layer) {
            map.ids.push(feature.id);
            if (feature.properties && feature.properties.popupContent) {
              //L.popup().setLatLng(latlng).setContent(feature.properties.popupContent).openOn(map);
              layer.bindPopup(feature.properties.popupContent).openPopup();
            }
          }
        }).addTo(map);
        //console.log(data);
    });
}

function onMapMove(e) {
    // polygon
    //     .setLatLngs([map.getBounds().getNorthWest(),
    //         map.getBounds().getNorthEast(),
    //         map.getBounds().getSouthEast(),
    //         map.getBounds().getSouthWest()]
    //     );
    search();
}

map.on('moveend', onMapMove);


//////////////////////////////////////////////////////
// Detecting location and placing a pin on the map. //
//////////////////////////////////////////////////////

function success(le) {
  $(function() {
    console.log("setting position");
    console.log(le.latlng);
    map.setView([le.latlng.lat, le.latlng.lng], 13);
    var marker = L.marker([le.latlng.lat, le.latlng.lng]).addTo(map);
    marker.bindPopup("You are here!").openPopup();
  });

  // instead of this we should re-gen the _wx block with ajax.
  // (in which case the modal should be nested inside the top div)
}




function error(ee) {
  //var s = document.querySelector('#status');
  //s.innerHTML = typeof msg == 'string' ? msg : "failed";
  //s.className = 'fail';

  // Set default location to Adelaide
  map.setView([-34.92738, 138.60039], 13);
  
  console.log("Error",ee.message);
}

map.on('locationfound', success);

map.on('locationerror', error);

