// Home page js

// Set default location to Adelaide

var map = L.map('map').setView([-34.92738, 138.60039], 13);
L.tileLayer("http://{s}.tile.cloudmade.com/<%= ENV['MAP_TILES_API_KEY'] %>/97734@2x/256/{z}/{x}/{y}.png", {
    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://cloudmade.com">CloudMade</a>',
    maxZoom: 30
}).addTo(map);

// Make a custom marker

var cameraIcon = L.icon({
    iconUrl: 'assets/camera.png',
    shadowUrl: 'assets/camera-shadow.png',

    iconSize:     [20, 20], // size of the icon
    shadowSize:   [32, 20], // size of the shadow
    //iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
    //shadowAnchor: [4, 62],  // the same for the shadow
    popupAnchor:  [0, -10] // point from which the popup should open relative to the iconAnchor
});

// Set a popup when you click on the map (for testing)

// var popup = L.popup();

// function onMapClick(e) {
//     popup
//         .setLatLng(e.latlng)
//         .setContent("You clicked the map at " + e.latlng.toString())
//         .openOn(map);
// }

// map.on('click', onMapClick);


////////////////////////////////////////////////
// Rendering to the map bounds on movement //
////////////////////////////////////////////////

var myLayer = L.geoJson([], {
       pointToLayer: function (feature, latlng) {
               return L.marker(latlng, {icon: cameraIcon});
       },
       onEachFeature: function (feature, layer) {
            if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
            }
        }
    }
    ).addTo(map);

function search() {
    jQuery.get("images/search", { "maximum_latitude": map.getBounds().getNorthWest().lat, "minimum_latitude": map.getBounds().getSouthEast().lat, "maximum_longitude": map.getBounds().getSouthEast().lng, "minimum_longitude": map.getBounds().getNorthWest().lng }, function(data){
        myLayer.addData(data);
        //L.geoJson(data).addTo(map);
        console.log(data);
    });
}

function onMapMove(e) {
    // polygon
    //     .setLatLngs([map.getBounds().getNorthWest(),
    //         map.getBounds().getNorthEast(),
    //         map.getBounds().getSouthEast(),
    //         map.getBounds().getSouthWest()]
    //     );
    search();
}

map.on('moveend', onMapMove);


//////////////////////////////////////////////////////
// Detecting location and placing a pin on the map. //
//////////////////////////////////////////////////////

function success(position) {
  $(function() {
    console.log("setting position");
    console.log(position);
    map.setView([position.coords.latitude, position.coords.longitude], 13);
    var marker = L.marker([position.coords.latitude, position.coords.longitude]).addTo(map);
    marker.bindPopup("You are here!").openPopup();
    
  });

  // instead of this we should re-gen the _wx block with ajax.
  // (in which case the modal should be nested inside the top div)
}

function error(msg) {
  //var s = document.querySelector('#status');
  //s.innerHTML = typeof msg == 'string' ? msg : "failed";
  //s.className = 'fail';
  
  console.log("Error",msg);
}

if (Modernizr.geolocation) {
  //navigator.geolocation.getCurrentPosition(success, function(){success({"coords":{"latitude":16.775833,"longitude":-3.009444,"accuracy":0}})});
  navigator.geolocation.getCurrentPosition(success, error, {timeout:10000});
} else {
  error('not supported');
}
